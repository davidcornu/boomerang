// Generated by CoffeeScript 1.3.3
(function() {
  var domFilter, jsdom, proxy, rxpStrip;

  jsdom = require('jsdom');

  proxy = function(input, output, filter) {
    var buffer, outEnd, outWrite;
    outWrite = output.write;
    outEnd = output.end;
    buffer = '';
    output.write = function(buf) {
      return buffer += buf.toString();
    };
    output.end = function(buf) {
      if (buf) {
        buffer += buf.toString();
      }
      return filter(buffer, function(cleanHtml) {
        return outEnd.call(output, cleanHtml);
      });
    };
    return input.pipe(output);
  };

  rxpStrip = function(html, callback) {
    var cleanHtml;
    cleanHtml = html.replace(/<script[^>]*>[\S\s]*?<\/script>/g, '').replace(/<style[^>]*>[\S\s]*?<\/style>/g, '').replace(/<link(rel\s?=['"]\s?stylesheet\s?['"]|[^>])*\/>/g, '').replace(/style\s?=\s?("[^"]*"|'[^']*')/g, '');
    if (typof(callback) === 'function') {
      return callback(cleanHtml);
    }
  };

  exports.naive = function(input, output) {
    return proxy(input, output, rxpStrip);
  };

  domFilter = function(html, callback) {
    jsdom.defaultDocumentFeatures = {
      FetchExternalResources: false,
      ProcessExternalResources: false,
      QuerySelector: false
    };
    return jsdom.env(html, function(errors, window) {
      var intruder, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
      _ref = window.document.getElementsByTagName('style');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        intruder = _ref[_i];
        intruder.parentNode.removeChild(intruder);
      }
      _ref1 = window.document.getElementsByTagName('script');
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        intruder = _ref1[_j];
        intruder.parentNode.removeChild(intruder);
      }
      _ref2 = window.document.getElementsByTagName('link');
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        intruder = _ref2[_k];
        if (intruder.getAttribute('rel') === 'stylesheet') {
          intruder.parentNode.removeChild(intruder);
        }
      }
      if (typeof callback === 'function') {
        return callback(window.document.documentElement.innerHTML);
      }
    });
  };

  exports.dom = function(input, output) {
    return proxy(input, output, domFilter);
  };

}).call(this);
