// Generated by CoffeeScript 1.3.3
(function() {
  var Boomerang, express, filter, http, request, _;

  _ = require('underscore');

  express = require('express');

  http = require('http');

  request = require('request');

  filter = require('./boomerang/filter');

  Boomerang = (function() {

    Boomerang.prototype.proxiedHeaders = ['cache-control', 'user-agent', 'accept', 'accept-language', 'cookie'];

    function Boomerang(options) {
      var _this = this;
      this.options = options != null ? options : {};
      _(this.options).extend({
        port: 3000
      });
      this.app = express();
      this.server = http.createServer(this.app).listen(this.options.port, function() {
        return console.log("Boomerang listening on port " + _this.options.port);
      });
      this.configure();
    }

    Boomerang.prototype.configure = function() {
      var _this = this;
      this.app.configure(function() {
        _this.app.use(express.logger('dev'));
        return _this.app.use(_this.app.router);
      });
      this.app.configure('development', function() {
        return _this.app.use(express.errorHandler());
      });
      return this.app.all(['/blog', '/blog/*'], this.proxyRequest);
    };

    Boomerang.prototype.proxyRequest = function(req, res) {
      var options, _ref;
      options = {
        uri: 'http://blog.busbud.com' + req.params[0].replace(/\/blog/, ''),
        headers: (_ref = _(req.headers)).pick.apply(_ref, this.proxiedHeaders),
        method: req.method
      };
      if (req.body) {
        options['body'] = req.body;
      }
      return filter.dom(request(options), res);
    };

    return Boomerang;

  })();

  exports.createServer = function(options) {
    return new Boomerang(options);
  };

}).call(this);
